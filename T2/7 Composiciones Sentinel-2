////////////////////////////////////////////////////////////////////////////////
// Talleres de Capacitación Geoespacial de República Dominicana
// Taller: (T2) Introducción al Google Earth Engine
// Organizado por: SERVIR-Amazonia, INTEC
// Autora: Andréa Puzzi Nicolau (Spatial Informatics Group)
// Título: Pre procesamiento y Composición de Imágenes Sentinel-2
////////////////////////////////////////////////////////////////////////////////

//--------------------------------------------------------------
// Definir área de interés (datos vectoriales)
//--------------------------------------------------------------

// Definir variable 'area' filtrando el conjunto de datos de la FAO.
// https://developers.google.com/earth-engine/datasets/catalog/FAO_GAUL_2015_level0
var limites = ee.FeatureCollection('FAO/GAUL/2015/level0');
var area = limites.filter(
  ee.Filter.eq('ADM0_NAME', 'Dominican Republic')
);

// SUGERENCIA: Centrar el mapa antes de agregar una capa es más rápido que agregarla después.
Map.centerObject(area, 9);

// Agregue el área de interés al mapa.
Map.addLayer(area, {}, 'Área de Interés', false);


//--------------------------------------------------------------
// Definir dato raster
//--------------------------------------------------------------

// Trabajaremos con imágenes de Sentinel-2.
// Busque en la barra de búsqueda 'Sentinel-2 level 2'.
// Nivel 2A - Máxima calidad, "bottom-of-atmosphere": reflectancia.

// Inspeccione las propiedades en la descripción del conjunto de datos.
// https://developers.google.com/earth-engine/datasets/catalog/COPERNICUS_S2_SR
var s2 = ee.ImageCollection("COPERNICUS/S2_SR");

// Filtre la colección según aoi, período de tiempo y cobertura de nubes.
// Trabajaremos con imágenes del 2019 al 2021.
var s2filtrado = s2.filterBounds(area)
                   .filterDate('2019-01-01', '2022-01-01')
                   .filter(ee.Filter.lt('CLOUDY_PIXEL_PERCENTAGE', 20));

// Imprimir la colección filtrada.
print('Colección Filtrada Sentinel-2', s2filtrado);


//--------------------------------------------------------------
// Preprocesamiento de series temporales
// (Enmascaramiento de nubes y cálculo de índices)
//--------------------------------------------------------------
// Preprocesamiento de series de tiempo usando funciones que se aplican
// a todas y cada una de las imágenes de la colección.


// Función de enmascaramiento de nubes.
// La banda de calidad 'QA60' proporciona información sobre la ocurrencia de nubes
// y otros aspectos de calidad de imagen.
// La información se almacena en bits y usamos la función 'bitWiseAnd'
// para extraerlo.
function mascaraNubesS2(imagen) {
  var qa = imagen.select('QA60');

  // Bits 10 y 11 con nubes y nubes cirrus, respectivamente.
  var bitmaskNubes = 1 << 10;
  var bitmaskCirrus = 1 << 11;

  // Both flags should be set to zero, indicating clear conditions.
  var mascara = qa.bitwiseAnd(bitmaskNubes).eq(0)
      .and(qa.bitwiseAnd(bitmaskCirrus).eq(0));
  
  // Scale the surface reflactance bands by their scale factor.
  // https://developers.google.com/earth-engine/datasets/catalog/COPERNICUS_S2_SR#bands
  var bandas = imagen.select('B.').divide(10000);
  
  return imagen.addBands(bandas, null, true).updateMask(mascara);
}

// Función para calcular índices
// NDVI: (NIR-Red)/(NIR+Red)
// LSWI: (NIR-SWIR1)/(NIR+SWIR1)
// NDMI: (SWIR2-Red)/(SWIR2+Red)
// Utilizamos la función de GEE 'normalizedDifference'
function calcularIndices(imagen){
  var ndvi = imagen.normalizedDifference(['B8', 'B4']).rename('ndvi');
  var lswi = imagen.normalizedDifference(['B8', 'B11']).rename('lswi');
  var ndmi = imagen.normalizedDifference(['B12', 'B3']).rename('ndmi');
  var mndwi = imagen.normalizedDifference(['B3', 'B11']).rename('mndwi');
  
  return ee.Image.cat([imagen, ndvi, lswi, ndmi, mndwi]);
}


// Aplicar funciones de pre procesamiento a las imágenes en la colección.
var s2preProcesado = s2filtrado.map(mascaraNubesS2)
                               .map(calcularIndices);

print(s2preProcesado.first());

//---------------------------------------------------------------
// Visualizar las primeras imágenes no procesadas y preprocesadas
//---------------------------------------------------------------

// Seleccionar la primera imagen no procesada.
var primeraNoProcesada = s2filtrado.first();

// Definir parametros de visualización.
var paramVisNoProcesada = {
  bands: ['B4', 'B3', 'B2'],
  min: -100,
  max: 1800
};

// Agregar imagen al mapa.
Map.addLayer(primeraNoProcesada, 
             paramVisNoProcesada, 
             'Primera Imagen No Procesada');


// Seleccionar la primera imagen preprocesada.
var primeraPreProcesada = s2preProcesado.first();

// Definir parametros de visualización.
var paramVisPreProcesada = {
  bands: ['B4', 'B3', 'B2'],
  min: 0.0,
  max: 0.18
};

// Agregar imagen al mapa.
Map.addLayer(primeraPreProcesada, 
             paramVisPreProcesada, 
             'Primera Imagen Preprocesada');


//--------------------------------------------------------------
// Crear una composición
//--------------------------------------------------------------
// Utilice las siguientes funciones para comparar diferentes agregaciones:
// .min(); .max(); .mean(); .median()

// Trabajaremos con el compuesto Median.
var composicion = s2preProcesado.median().clip(area);

// Agregar composición al mapa.
Map.addLayer(composicion, paramVisPreProcesada, 'Composición Preprocesada');


// Usa la propiedad de tiempo (metadatos) para crear un mosaico de calidad.
// Primero convertimos la propiedad en una banda y luego aplicamos
// la función de mosaico de calidad.
var mosaicoMasReciente = s2preProcesado.map(function(imagen) {
  return imagen.addBands(
    ee.Image(ee.Number(imagen.get('system:time_start')))
    .rename('tiempo')).toFloat();
  
}).qualityMosaic('tiempo');

// Agregar mosaico más reciente al mapa.
Map.addLayer(mosaicoMasReciente, paramVisPreProcesada, 'Mosaico Más Reciente');


//--------------------------------------------------------------
// Exportar composición para el Drive o como un Asset
//--------------------------------------------------------------

// Exportar para Google Drive.
Export.image.toDrive({
  image: composicion.toFloat(),
  description: 'composicionMedianaSentinel2_2019-2021',
  fileNamePrefix: 'composicionMedianaSentinel2_2019-2021',
  region: area,
  scale: 10,
  maxPixels: 1e13
});

// Exportar como un GEE Asset.
Export.image.toAsset({
  image: composicion,
  description: 'composicionMedianaSentinel2_1921',
  assetId: 'projects/caribbean-trainings/assets/dominican-republic-2023/images/composicionMedianaSentinel2_1921', //! ACTUALIZAR A RUTA PROPIA
  region: area,
  scale: 10,
  maxPixels: 1e13
});

